память - линейка
0 1 2 3 4 5 6 7 8 9 A B C D E F 10 ...
массив - кусок памяти начиная с какогото индекса и до др индекса
один тип
послдевательно

int arr[3] можно сразу присвоить = {1, 2, 3};
можно ничго не присваимвать
можно просто
arr[0] = 1;
arr[1] = 2;
arr[2] = 3;

можно инициализировать

int arr[] = {1, 2, 3};

так нельзя
~~int arr[];~~

можно неполную инициазизацию
int arr[3] = {}
есло просто int arr[size] то просто мусор

неполная инициалзизация
int arr[3] = {1, 2} => {1, 2, 0};

!важно
1)получив переменную с массивом, ей нельзя присвоить др массив
    int arr[3];
    int arr2[3] = arr;
    нельзя error
2)никто в плюсах не будет проверять выход за пределы - ошибки ен будет
    int arr[3];
    arr[10] = 1323; - ошибки не буде
    arr[-100] = 123 - ошибки не буде
3) массив не хранит информацию о размере

4)sizeof работает только на этапе компиляции
    можем получить размер sizeof(arr) / sizeof(arr[0]) только в локальном контексте
    если передаем в функцию это не буде работать
5)размером являются целые значения констаты длиба литералы
    int a = 3;
    int arr[a];
    ошбка, по стандарту нельзя

    называется vla - variable length array - это плохо   

